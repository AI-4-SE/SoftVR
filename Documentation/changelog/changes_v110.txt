Major changes for version 1.1.0:

[11.06.2019]
- SNode now holds a reference to the CodeFile
  -> to avoid additional calls and retrievals using the StructureLoader class

[12.06.2019]
- Refactoring of spawner system
  - Spawners can now be retrieved from the ApplicationLoader using their name
  - Only spawners that are registered in the ApplicationLoader component are usable
  - Spawners can have "sub-spawners" (e.g. FileSpawner has the EdgeSpawner and RegionsSpawner)
  - "Sub-spawners" can be retrieved through spawner classes using GetSpawner() and e.g. the FileSpawner.SpawnerList enum
  - Spawners can be set to be run on startup or not in the ApplicationLoader component
- Fixed: No terminal rotation velocity applied in "ExampleScene_Catena"

[25., 26., 28.06.2019]
- Implementation of code city visualization

[03.07.2019]
- SteamVR Update (from 2.2.0 to 2.3.2)
- Removed old file and folder prefabs
- Implemented Code City hover UI with basic information
  (requires a fix: count of sub-elements is wrong)

[04.07.2019]
- Code City:
  - hover sub-element info fixed
  - changing package color according to depth
  - experimental interface in editor to color files of specific types/extensions

[10.07.2019]
- Added showing/hiding graphs and city visualization in current UI terminal

[11.07.2019]
- Code Window: layout improvements for heightmap and feature region visualization
- RegionSpawner: added events so that other components can register and receive notifications on region spawn

[12.07.2019]
- fix: NullPointerException when calling "WindowSpawnedCallback" function with no CodeFile
- fix: Last line number not shown in Code Window
- First version of the code window content overview integrated (already shows code, regions prepared)

[17.07.2019]
- improvement: Content texture generation is now much faster than previously
  - code texture generation for Catena.java: previously: ~ 95-100 ms, now: ~ 30-35 ms
  - using two index dictionaries now: one for bitstring convertion and one for character patterns
  - also assigning all pixels of a color array at once now, using Texture2D.setPixels() instead of many single calls to setPixel()
- started adding code for region texture generation

[18.07.2019]
- region texture generation, overlaying and showing works now
- added first part of "getting-started" to documentation
- registered ApplicationLoader in "Script Execution Order"

[24.07.2019]
- added "isLeaf" to structure nodes (SNode class)
- started with third version of the structure loader with cone tree reduced in size (StructureSpawnerV3.cs)

[02.08.2019]
- added StructureLoaderV3

[05.08.2019]
- first working version of StructureLoaderV3 for reduced cone tree layout size
  - disabled StructureLoaderV2 and replaced it for now
- moved I/O related methods from CodeCityV1 to Utility
- added nodes rotating towards their parent in directory cone trees
- added generic code for cone tree layout creation, this action added GenericNode to SNode and AFeature

[06.08.2019]
- applied new cone tree layout to variability model (using generic code base)

[08.08.2019]
- spawners:
  - added info field for further information about a spawner
  - switched order of variables so that name is used in editor
- cone tree layout:
  - added rotation of child nodes to settings
- cleanup of example scenes (brought them on a "stable" state)
- added a new scene for development
- changed font of code windows to a monospace font "Source Code Pro Regular"
- adjusted maximum "line number" text (left side of code window) to support up to 9999 lines

[09.08.2019]
- fallback cam: interaction with code city possible (click element to open file as usual)
- VR laser pointer: interaction with code city possible to spawn files as usual
- CodeWindowMover now automatically checks if Trigger & Teleport buttons needs to be locked on SelectNode call

[15.08.2019]
- terminal UI: notified by VariabilityModel after the configuration has been validated to take care of adjusting feedback
- terminal UI: notified by VariabilityModel after the configuration has changed to take care of adjusting feedback text

[16.08.2019]
- basic scroll wheel implementation

[21.08.2019]
- implemented FilenameSettings (see ValueMappings in documentation) to color-code files according to their names
- adjusted CodeCity and Structure visualizations to make use of FilenameSettings for color-coding
- scroll improvements
- fixed cone tree layout (folders did overlap in case they had only one child)

[22.08.2019]
- fixed: variability model node information shown in hover UI not always updating properly
  - each feature instance now allows to add an event listener called on value change
- fixed: changing controller while pointing at folders/files does not change back color of marked folder/file
- CodeCity: elements now showing information more specific to their type (FOLDER or FILE)
  - file elements do no longer show sub-elements but their spawned state
  - added haptic feedback for code city interaction
- adjusted haptic feedback of structure node interaction
- added an animated scroll wheel model
- added raycast to check that code city hover window is not inside a building

[23.08.2019]
- disabled lighting shadows in general
- Code City:
  - centering first element according to its parent after spawn
  - showing gizmo at spawn location in editor while application is not running
  - improved lighting (own lighting for code city elements)
  - added basic automated "base plate" creation

[27.08.2019]
- code city: base plate lifting functionality added

[28.08.2019]
- code city: base plate rotation functionality added
- updated layermask behaviour of pointer and input module
- code city elements no longer prevent teleportation (added IgnoreTeleportTrace component)

[04.09.2019]
- code city: element texture generation added to show NFP regions on one side

[05.09.2019]
- user can now switch between either NFP heightmap or content overview or disabled both
- added check for variability model validity and usage to VariabilityModelLoader class
- code city texture packing is now faster and requires less size per texture
- updated lighting and added new code city prefab to the example scenes (Catena)

[06.09.2019]
- code city texturing: ability to switch between "show missing regions" and "hide missing regions"
  (if "showMissingRegions" is enabled, creates the regions in the texture as they appear in the file)
- also showing texture now on two faces of the city element

[12.09.2019]
- added switching between heightmap and content overview to example scenes
- added "readOnly" property to features/options (e.g. used by root node so that it can no longer be changed)
- Variability model node interaction: pointer click now handled by VariabilityModelInteraction.cs
- Fixed a bug in "GetAllValues()" method of AFeature.cs where values greater than the maximum were added
- added a basic UI to change the value of numerical options/feature of the variability model

[13.09.2019]
- fallback camera: fixed interaction with variability model to use the previously changed system
- fixed: numerical values now correctly provided by slider (min and max available)
- whitespaces of variability model feature/option names are now trimmed (also the outputString)
- adjusted variability model hover UI
- fixed: hiding variabiltiy model hover UI when clicked on binary option/feature
- created visualization prefabs for variability model and software structure
- adjusted variability model node spacing
- removed old (and unused) base for laser pointer input module

[19.09.2019]
- added VRVisHelper class with methods to get easier access to some information stored by the framework
- fixed: Terminal: Variability Model: Validation color not changed if terminal disabled and option state changes
- fixed: Hover windows still showing if laser pointer was disabled
- fixed: Horizontal scrollbar of code window is sometimes not adjusting the content
- fixed: Rare out of bounds exception when generating overview texture (when only a single line in file)
- Controller: Laserpointer: Teleportation is now possible if the pointer is disabled
- Variabiliy Model nodes no longer blocking teleport trace
