Major changes for version 0.1.1:

[11.06.2019]
- SNode now holds a reference to the CodeFile
  -> to avoid additional calls and retrievals using the StructureLoader class

[12.06.2019]
- Refactoring of spawner system
  - Spawners can now be retrieved from the ApplicationLoader using their name
  - Only spawners that are registered in the ApplicationLoader component are usable
  - Spawners can have "sub-spawners" (e.g. FileSpawner has the EdgeSpawner and RegionsSpawner)
  - "Sub-spawners" can be retrieved through spawner classes using GetSpawner() and e.g. the FileSpawner.SpawnerList enum
  - Spawners can be set to be run on startup or not in the ApplicationLoader component
- Fixed: No terminal rotation velocity applied in "ExampleScene_Catena"

[25., 26., 28.06.2019]
- Implementation of code city visualization

[03.07.2019]
- SteamVR Update (from 2.2.0 to 2.3.2)
- Removed old file and folder prefabs
- Implemented Code City hover UI with basic information
  (requires a fix: count of sub-elements is wrong)

[04.07.2019]
- Code City:
  - hover sub-element info fixed
  - changing package color according to depth
  - experimental interface in editor to color files of specific types/extensions

[10.07.2019]
- Added showing/hiding graphs and city visualization in current UI terminal

[11.07.2019]
- Code Window: layout improvements for heightmap and feature region visualization
- RegionSpawner: added events so that other components can register and receive notifications on region spawn

[12.07.2019]
- fix: NullPointerException when calling "WindowSpawnedCallback" function with no CodeFile
- fix: Last line number not shown in Code Window
- First version of the code window content overview integrated (already shows code, regions prepared)

[17.07.2019]
- improvement: Content texture generation is now much faster than previously
  - code texture generation for Catena.java: previously: ~ 95-100 ms, now: ~ 30-35 ms
  - using two index dictionaries now: one for bitstring convertion and one for character patterns
  - also assigning all pixels of a color array at once now, using Texture2D.setPixels() instead of many single calls to setPixel()
- started adding code for region texture generation

[18.07.2019]
- region texture generation, overlaying and showing works now
- added first part of "getting-started" to documentation
- registered ApplicationLoader in "Script Execution Order"

[24.07.2019]
- added "isLeaf" to structure nodes (SNode class)
- started with third version of the structure loader with cone tree reduced in size (StructureSpawnerV3.cs)

[02.08.2019]
- added StructureLoaderV3

[05.08.2019]
- first working version of StructureLoaderV3 for reduced cone tree layout size
  - disabled StructureLoaderV2 and replaced it for now
- moved I/O related methods from CodeCityV1 to Utility
- added nodes rotating towards their parent in directory cone trees
- added generic code for cone tree layout creation, this action added GenericNode to SNode and AFeature

[06.08.2019]
- applied new cone tree layout to variability model (using generic code base)

[08.08.2019]
- spawners:
  - added info field for further information about a spawner
  - switched order of variables so that name is used in editor
- cone tree layout:
  - added rotation of child nodes to settings
- cleanup of example scenes (brought them on a "stable" state)
- added a new scene for development
